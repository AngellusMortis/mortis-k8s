# kubectl apply -f manifests/http-debug.yml
# kubectl delete -f manifests/http-debug.yml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-debug
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: http-debug
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: http-debug
    spec:
      containers:
      - name: http
        image: gcr.io/google_containers/echoserver:1.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
---
apiVersion: v1
kind: Service
metadata:
  name: http-debug
  labels:
    app.kubernetes.io/name: http-debug
spec:
  selector:
    app.kubernetes.io/name: http-debug
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: "debug.wl.mort.is"
  name: http-debug2
  labels:
    app.kubernetes.io/name: http-debug
spec:
  ingressClassName: nginx-secure
  tls:
  - hosts:
    - debug2.wl.mort.is
  rules:
  - host: debug2.wl.mort.is
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: http-debug
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: "debug.wl.mort.is"
  name: http-debug
  labels:
    app.kubernetes.io/name: http-debug
spec:
  ingressClassName: nginx-insecure
  tls:
  - hosts:
    - debug.wl.mort.is
  rules:
  - host: debug.wl.mort.is
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: http-debug
            port:
              number: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: http-debug3
  annotations:
    metallb.universe.tf/loadBalancerIPs: 192.168.3.226
spec:
  selector:
    app.kubernetes.io/name: http-debug
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer
  externalTrafficPolicy: "Local"
