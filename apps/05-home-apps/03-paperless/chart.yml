apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: paperless
  namespace: paperless
spec:
  interval: 12h
  url: oci://tccr.io/truecharts/paperless-ngx
  layerSelector:
    mediaType: "application/vnd.cncf.helm.chart.content.v1.tar+gzip"
    operation: extract
  ref:
    semver: "9.*"
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-apps-paperless
  namespace: paperless
spec:
  releaseName: paperless
  targetNamespace: paperless
  interval: 10m
  timeout: 5m
  chartRef:
    kind: OCIRepository
    name: paperless
  values:
    persistence:
      data:
        enabled: true
        mountPath: "/usr/src/paperless/data"
      consume:
        enabled: true
        type: pvc
        storageClass: smb-public
        mountPath: "/usr/src/paperless/consume"
        subPath: "scan"
      media:
        enabled: true
        type: pvc
        storageClass: smb-syncthing
        subPath: "shared/paperless/media"
        mountPath: "/usr/src/paperless/media"
      varrun:
        enabled: false
    cnpg:
      main:
        enabled: true
        user: paperless
        database: paperless
    workload:
      main:
        podSpec:
          containers:
            main:
              env:
                COMPOSE_PROJECT_NAME: paperless
                PAPERLESS_TIME_ZONE: America/New_York
                PAPERLESS_PORT: "{{ .Values.service.main.ports.main.targetPort }}"
                PAPERLESS_DATA_DIR: "/usr/src/paperless/data"
                PAPERLESS_CONSUMPTION_DIR: "/usr/src/paperless/consume"
                PAPERLESS_MEDIA_ROOT: "/usr/src/paperless/media"
                PAPERLESS_CONSUMER_POLLING: 60
                PAPERLESS_FILENAME_FORMAT: "{created_year}/{correspondent}/{title}"
                PAPERLESS_URL: "https://paperless.wl.mort.is"
                USERMAP_UID: "{{ .Values.securityContext.container.PUID }}"
                USERMAP_GID: "{{ .Values.securityContext.pod.fsGroup }}"
                PAPERLESS_DBNAME: "{{ .Values.cnpg.main.database }}"
                PAPERLESS_DBUSER: "{{ .Values.cnpg.main.user }}"
                PAPERLESS_DBPORT: "5432"
                PAPERLESS_WEBSERVER_WORKERS: 2
                PAPERLESS_ENABLE_HTTP_REMOTE_USER: TRUE
                PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_X_AUTHENTIK_USERNAME
                PAPERLESS_OCR_IMAGE_DPI: 300
                PAPERLESS_DBPASS:
                  secretKeyRef:
                    name: cnpg-main-user
                    key: password
                PAPERLESS_DBHOST:
                  secretKeyRef:
                    name: cnpg-main-urls
                    key: host
                PAPERLESS_REDIS:
                  secretKeyRef:
                    expandObjectName: false
                    name: '{{ printf "%s-%s" .Release.Name "rediscreds" }}'
                    key: url
                PAPERLESS_SECRET_KEY:
                  secretKeyRef:
                    expandObjectName: false
                    name: paperless-secret-key
                    key: PAPERLESS_SECRET_KEY
                PAPERLESS_OCR_LANGUAGE: "eng"
                PAPERLESS_OCR_LANGUAGES: "eng"
    ingress:
      main:
        enabled: true
        annotations:
          nginx.ingress.kubernetes.io/upstream-vhost: "paperless.wl.mort.is"
          nginx.ingress.kubernetes.io/auth-url: |-
              http://ak-outpost-authentik-embedded-outpost.auth.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
              https://auth.wl.mort.is/outpost.goauthentik.io/start?rd=$scheme%3A%2F%2F$host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
              Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
              proxy_set_header X-Forwarded-Host $http_host;
        ingressClassName:  "nginx-secure"
        hosts:
          - host: paperless.wl.mort.is
            paths:
                - path: /
                  pathType: Prefix
                  overrideService:
                    name: main
                    port: 10140
        integrations:
          certManager:
            enabled: false
          traefik:
            enabled: false
          homepage:
            enabled: false
