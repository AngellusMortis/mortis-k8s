apiVersion: v1
kind: Service
metadata:
  name: span
  namespace: ingress
spec:
  externalName: span.wl.mort.is
  type: ExternalName
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: "power.wl.mort.is"
    nginx.ingress.kubernetes.io/auth-url: |-
        http://ak-outpost-authentik-embedded-outpost.auth.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    nginx.ingress.kubernetes.io/auth-signin: |-
        https://auth.wl.mort.is/outpost.goauthentik.io/start?rd=$scheme%3A%2F%2F$host$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
  name: span
  namespace: ingress
spec:
  ingressClassName: nginx-secure
  rules:
  - host: power.wl.mort.is
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: span
            port:
              number: 80
---


## Enphase Envoy
apiVersion: v1
kind: Service
metadata:
  name: enphase
  namespace: ingress
spec:
  externalName: enphase.wl.mort.is
  type: ExternalName
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: "solar.wl.mort.is"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/auth-url: |-
        http://ak-outpost-authentik-embedded-outpost.auth.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    nginx.ingress.kubernetes.io/auth-signin: |-
        https://auth.wl.mort.is/outpost.goauthentik.io/start?rd=$scheme%3A%2F%2F$host$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
  name: enphase
  namespace: ingress
spec:
  ingressClassName: nginx-secure
  rules:
  - host: solar.wl.mort.is
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: enphase
            port:
              number: 443
---


## Valtuedo
apiVersion: v1
kind: Service
metadata:
  name: vacuum-1
  namespace: ingress
spec:
  externalName: vacuum-1.wl.mort.is
  type: ExternalName
---
apiVersion: v1
kind: Service
metadata:
  name: vacuum-2
  namespace: ingress
spec:
  externalName: vacuum-2.wl.mort.is
  type: ExternalName
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: "vacuum.wl.mort.is"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/auth-url: |-
        http://ak-outpost-authentik-embedded-outpost.auth.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    nginx.ingress.kubernetes.io/auth-signin: |-
        https://auth.wl.mort.is/outpost.goauthentik.io/start?rd=$scheme%3A%2F%2F$host$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
  name: vacuum-1
  namespace: ingress
spec:
  ingressClassName: nginx-secure
  rules:
  - host: vacuum.wl.mort.is
    http:
      paths:
      - path: /downstairs(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: vacuum-1
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: "vacuum.wl.mort.is"
    nginx.ingress.kubernetes.io/auth-url: |-
        http://ak-outpost-authentik-embedded-outpost.auth.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    nginx.ingress.kubernetes.io/auth-signin: |-
        https://auth.wl.mort.is/outpost.goauthentik.io/start?rd=$scheme%3A%2F%2F$host$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
  name: vacuum-2
  namespace: ingress
spec:
  ingressClassName: nginx-secure
  rules:
  - host: vacuum.wl.mort.is
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vacuum-2
            port:
              number: 80


## Home Assistant
---
apiVersion: v1
kind: Service
metadata:
  name: home-assistant
  namespace: ingress
spec:
  externalName: home-control.wl.mort.is
  type: ExternalName
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: "home.wl.mort.is"
    # nginx.ingress.kubernetes.io/auth-url: |-
    #     http://ak-outpost-authentik-embedded-outpost.auth.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    # nginx.ingress.kubernetes.io/auth-signin: |-
    #     https://auth.wl.mort.is/outpost.goauthentik.io/start?rd=$scheme%3A%2F%2F$host$escaped_request_uri
    # nginx.ingress.kubernetes.io/auth-response-headers: |-
    #     Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    # nginx.ingress.kubernetes.io/auth-snippet: |
    #     proxy_set_header X-Forwarded-Host $http_host;
    nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
  name: home-assistant
  namespace: ingress
spec:
  ingressClassName: nginx-insecure
  rules:
  - host: home.wl.mort.is
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: home-assistant
            port:
              number: 8123


## UniFi Network
---
apiVersion: v1
kind: Service
metadata:
  name: unifi-network
  namespace: ingress
spec:
  externalName: network-control.wl.mort.is
  type: ExternalName
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: "network.wl.mort.is"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # nginx.ingress.kubernetes.io/auth-url: |-
    #     http://ak-outpost-authentik-embedded-outpost.auth.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    # nginx.ingress.kubernetes.io/auth-signin: |-
    #     https://auth.wl.mort.is/outpost.goauthentik.io/start?rd=$scheme%3A%2F%2F$host$escaped_request_uri
    # nginx.ingress.kubernetes.io/auth-response-headers: |-
    #     Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    # nginx.ingress.kubernetes.io/auth-snippet: |
    #     proxy_set_header X-Forwarded-Host $http_host;
    nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
  name: unifi-network
  namespace: ingress
spec:
  ingressClassName: nginx-insecure
  rules:
  - host: network.wl.mort.is
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: unifi-network
            port:
              number: 443


## UniFi Protect
---
apiVersion: v1
kind: Service
metadata:
  name: unifi-protect
  namespace: ingress
spec:
  externalName: protect-control.wl.mort.is
  type: ExternalName
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: "protect.wl.mort.is"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # nginx.ingress.kubernetes.io/auth-url: |-
    #     http://ak-outpost-authentik-embedded-outpost.auth.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    # nginx.ingress.kubernetes.io/auth-signin: |-
    #     https://auth.wl.mort.is/outpost.goauthentik.io/start?rd=$scheme%3A%2F%2F$host$escaped_request_uri
    # nginx.ingress.kubernetes.io/auth-response-headers: |-
    #     Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    # nginx.ingress.kubernetes.io/auth-snippet: |
    #     proxy_set_header X-Forwarded-Host $http_host;
    nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "86400"
  name: unifi-protect
  namespace: ingress
spec:
  ingressClassName: nginx-insecure
  rules:
  - host: protect.wl.mort.is
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: unifi-protect
            port:
              number: 443
