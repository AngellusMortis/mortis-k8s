apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ark-club-ark
  namespace: games
  labels:
    app.kubernetes.io/component: club-ark
    app.kubernetes.io/instance: ark
    app.kubernetes.io/name: ark
    app.kubernetes.io/part-of: ark
spec:
  replicas: 1
  serviceName: ark-club-ark
  selector:
    matchLabels:
      app.kubernetes.io/component: club-ark
      app.kubernetes.io/instance: ark
      app.kubernetes.io/name: ark
      app.kubernetes.io/part-of: ark
  template:
    metadata:
      labels:
        app.kubernetes.io/component: club-ark
        app.kubernetes.io/instance: ark
        app.kubernetes.io/name: ark
        app.kubernetes.io/part-of: ark
    spec:
      nodeSelector:
        kubernetes.io/hostname: games-1
      tolerations:
      - key: "type"
        operator: "Equal"
        value: "gamesOnly"
        effect: "PreferNoSchedule"
      containers:
      - name: ark
        image: sknnr/ark-ascended-server:v1.5.2
        imagePullPolicy: IfNotPresent
        command: [ "/home/steam/ark/entrypoint.sh" ]
        securityContext:
          runAsUser: 10000
          runAsGroup: 10000
          fsGroup: 10000
          allowPrivilegeEscalation: false
        ports:
        - containerPort: 7779
          name: ark
          protocol: UDP
        - containerPort: 27020
          name: rcon
          protocol: TCP
        envFrom:
          - configMapRef:
              name: ark-config-club
          - secretRef:
              name: ark-secrets
        env:
          - name: SESSION_NAME
            value: "\"Mortis - Club Ark\""
          - name: SERVER_MAP
            value: "BobsMissions_WP"
          - name: GAME_PORT
            value: "7779"
          - name: AUTO_UPDATE
            value: "true"
        volumeMounts:
          - mountPath: /home/steam/ark
            name: data
        resources:
          limits:
            cpu: 6000m
            memory: 24Gi
          requests:
            cpu: 4000m
            memory: 10Gi
        # readinessProbe:
        #   exec:
        #     command:
        #     - sh
        #     - -c
        #     - rcon -a 127.0.0.1:${RCON_PORT} -p ${SERVER_ADMIN_PASSWORD} listplayers
        #   initialDelaySeconds: 60 # how long after the rcon port starts listening the game server is "online"
        #   timeoutSeconds: 1
        #   periodSeconds: 5
        #   failureThreshold: 3
        #   successThreshold: 1
        # startupProbe:
        #   exec:
        #     command:
        #       - sh
        #       - -c
        #       - test ! -f "${ARK_PATH}/ShooterGame/Saved/SavedArks/${SERVER_MAP}/.pre-setup"
        #   initialDelaySeconds: 5
        #   # 60 minutes to update
        #   failureThreshold: 360
        #   periodSeconds: 10

      # - name: gluetun
      #   image: ghcr.io/qdm12/gluetun:v3.39.1 # {"$imagepolicy": "flux-system:gluetun-policy"}
      #   imagePullPolicy: IfNotPresent
      #   ports:
      #   - containerPort: 8000
      #     name: gluetun-control
      #   securityContext:
      #     privileged: true
      #     capabilities:
      #       add:
      #       - NET_ADMIN
      #   livenessProbe:
      #     tcpSocket:
      #       port: gluetun-control
      #     initialDelaySeconds: 3
      #     timeoutSeconds: 3
      #     periodSeconds: 5
      #     failureThreshold: 5
      #     successThreshold: 1
      #   readinessProbe:
      #     httpGet:
      #       path: "/v1/publicip/ip"
      #       port: gluetun-control
      #       scheme: HTTP
      #     initialDelaySeconds: 3
      #     timeoutSeconds: 3
      #     periodSeconds: 5
      #     failureThreshold: 5
      #     successThreshold: 1
      #   envFrom:
      #   - secretRef:
      #       name: wg-secrets
      #   - secretRef:
      #       name: wg-secrets-ark-club
      #   env:
      #   - name: TZ
      #     value: "America/New_York"
      #   - name: VPN_SERVICE_PROVIDER
      #     value: "custom"
      #   - name: VPN_TYPE
      #     value: "wireguard"
      #   - name: WIREGUARD_ADDRESSES
      #     value: "10.8.0.122/32"
      #   - name: FIREWALL_DEBUG
      #     value: "on"
      #   - name: FIREWALL_INPUT_PORTS
      #     value: "8000,7779"
      #   - name: FIREWALL_VPN_INPUT_PORTS
      #     value: "7779"
      #   resources:
      #     limits:
      #       cpu: "4000m"
      #       memory: "1024Mi"
      #     requests:
      #       cpu: "1000m"
      #       memory: "256Mi"
      #   volumeMounts:
      #   - name: gluetun
      #     mountPath: /gluetun

      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: ark

  volumeClaimTemplates:
  - metadata:
      name: gluetun
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: longhorn
      resources:
        requests:
          storage: 1Gi
