apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-config
  namespace: games
  labels:
    app.kubernetes.io/component: proxy
    app.kubernetes.io/instance: minecraft
    app.kubernetes.io/name: minecraft
    app.kubernetes.io/part-of: minecraft
data:
  velocity.toml: |
    # Config version. Do not change this
    config-version = "2.7"

    # What port should the proxy be bound to? By default, we'll bind to all addresses on port 25577.
    bind = "0.0.0.0:22565"

    # What should be the MOTD? This gets displayed when the player adds your server to
    # their server list. Only MiniMessage format is accepted.
    motd = "Create Chronicles: The Endventure"

    # What should we display for the maximum number of players? (Velocity does not support a cap
    # on the number of players online.)
    show-max-players = 5

    # Should we authenticate players with Mojang? By default, this is on.
    online-mode = true

    # Should the proxy enforce the new public key security standard? By default, this is on.
    force-key-authentication = true

    # If client's ISP/AS sent from this proxy is different from the one from Mojang's
    # authentication server, the player is kicked. This disallows some VPN and proxy
    # connections but is a weak form of protection.
    prevent-client-proxy-connections = false

    # Should we forward IP addresses and other data to backend servers?
    # Available options:
    # - "none":        No forwarding will be done. All players will appear to be connecting
    #                  from the proxy and will have offline-mode UUIDs.
    # - "legacy":      Forward player IPs and UUIDs in a BungeeCord-compatible format. Use this
    #                  if you run servers using Minecraft 1.12 or lower.
    # - "bungeeguard": Forward player IPs and UUIDs in a format supported by the BungeeGuard
    #                  plugin. Use this if you run servers using Minecraft 1.12 or lower, and are
    #                  unable to implement network level firewalling (on a shared host).
    # - "modern":      Forward player IPs and UUIDs as part of the login process using
    #                  Velocity's native forwarding. Only applicable for Minecraft 1.13 or higher.
    player-info-forwarding-mode = "modern"

    # If you are using modern or BungeeGuard IP forwarding, configure a file that contains a unique secret here.
    # The file is expected to be UTF-8 encoded and not empty.
    forwarding-secret-file = "forwarding.secret"

    # Announce whether or not your server supports Forge. If you run a modded server, we
    # suggest turning this on.
    #
    # If your network runs one modpack consistently, consider using ping-passthrough = "mods"
    # instead for a nicer display in the server list.
    announce-forge = false

    # If enabled (default is false) and the proxy is in online mode, Velocity will kick
    # any existing player who is online if a duplicate connection attempt is made.
    kick-existing-players = false

    # Should Velocity pass server list ping requests to a backend server?
    # Available options:
    # - "disabled":    No pass-through will be done. The velocity.toml and server-icon.png
    #                  will determine the initial server list ping response.
    # - "mods":        Passes only the mod list from your backend server into the response.
    #                  The first server in your try list (or forced host) with a mod list will be
    #                  used. If no backend servers can be contacted, Velocity won't display any
    #                  mod information.
    # - "description": Uses the description and mod list from the backend server. The first
    #                  server in the try (or forced host) list that responds is used for the
    #                  description and mod list.
    # - "all":         Uses the backend server's response as the proxy response. The Velocity
    #                  configuration is used if no servers could be contacted.
    ping-passthrough = "DISABLED"

    # If not enabled (default is true) player IP addresses will be replaced by <ip address withheld> in logs
    enable-player-address-logging = true

    [servers]
    # Configure your servers here. Each key represents the server's name, and the value
    # represents the IP address of the server to connect to.
    main = "minecraft:25565"

    # In what order we should try servers when a player logs in or is kicked from a server.
    try = [
      "main"
    ]

    [forced-hosts]
    # Configure your forced hosts here.
    "minecraft" = [
        "main"
    ]

    [advanced]
    # How large a Minecraft packet has to be before we compress it. Setting this to zero will
    # compress all packets, and setting it to -1 will disable compression entirely.
    compression-threshold = 256

    # How much compression should be done (from 0-9). The default is -1, which uses the
    # default level of 6.
    compression-level = -1

    # How fast (in milliseconds) are clients allowed to connect after the last connection? By
    # default, this is three seconds. Disable this by setting this to 0.
    login-ratelimit = 3000

    # Specify a custom timeout for connection timeouts here. The default is five seconds.
    connection-timeout = 5000

    # Specify a read timeout for connections here. The default is 30 seconds.
    read-timeout = 30000

    # Enables compatibility with HAProxy's PROXY protocol. If you don't know what this is for, then
    # don't enable it.
    haproxy-protocol = false

    # Enables TCP fast open support on the proxy. Requires the proxy to run on Linux.
    tcp-fast-open = false

    # Enables BungeeCord plugin messaging channel support on Velocity.
    bungee-plugin-message-channel = true

    # Shows ping requests to the proxy from clients.
    show-ping-requests = false

    # By default, Velocity will attempt to gracefully handle situations where the user unexpectedly
    # loses connection to the server without an explicit disconnect message by attempting to fall the
    # user back, except in the case of read timeouts. BungeeCord will disconnect the user instead. You
    # can disable this setting to use the BungeeCord behavior.
    failover-on-unexpected-server-disconnect = true

    # Declares the proxy commands to 1.13+ clients.
    announce-proxy-commands = true

    # Enables the logging of commands
    log-command-executions = false

    # Enables logging of player connections when connecting to the proxy, switching servers
    # and disconnecting from the proxy.
    log-player-connections = true

    # Allows players transferred from other hosts via the
    # Transfer packet (Minecraft 1.20.5) to be received.
    accepts-transfers = false

    [query]
    # Whether to enable responding to GameSpy 4 query responses or not.
    enabled = false

    # If query is enabled, on what port should the query protocol listen on?
    port = 22565

    # This is the map name that is reported to the query services.
    map = "Velocity"

    # Whether plugins should be shown in query response by default or not
    show-plugins = false
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: proxy
  namespace: games
  labels:
    app.kubernetes.io/component: proxy
    app.kubernetes.io/instance: minecraft
    app.kubernetes.io/name: minecraft
    app.kubernetes.io/part-of: minecraft
spec:
  replicas: 2
  serviceName: proxy
  selector:
    matchLabels:
      app.kubernetes.io/component: proxy
      app.kubernetes.io/instance: minecraft
      app.kubernetes.io/name: minecraft
      app.kubernetes.io/part-of: minecraft
  template:
    metadata:
      labels:
        app.kubernetes.io/component: proxy
        app.kubernetes.io/instance: minecraft
        app.kubernetes.io/name: minecraft
        app.kubernetes.io/part-of: minecraft
    spec:
      tolerations:
      - key: "type"
        operator: "Equal"
        value: "gamesOnly"
        effect: "PreferNoSchedule"
      containers:
      - name: proxy
        image: ghcr.io/itzg/mc-proxy:java21-2025.6.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 22565
          name: proxy
        env:
          - name: TYPE
            value: "VELOCITY"
          - name: "MEMORY"
            value: "500m"
          - name: ICON
            value: https://files.wl.mort.is/41abe164-2b38-48a2-916f-1bf7fb20d174/mortis.png
          - name: REPLACE_ENV_VARIABLES
            value: "true"
          - name: "JVM_OPTS"
            value: "-Dvelocity.max-known-packs=750"
          - name: "JVM_XX_OPTS"
            value: "-XX:+UseG1GC -XX:G1HeapRegionSize=4M -XX:+UnlockExperimentalVMOptions -XX:+ParallelRefProcEnabled -XX:+AlwaysPreTouch -XX:MaxInlineLevel=15"
        volumeMounts:
        - name: data
          mountPath: /server
        - name: config
          mountPath: /config/velocity.toml
          subPath: velocity.toml
          readOnly: true
        - name: forwarding-secret
          mountPath: /config/forwarding.secret
          subPath: forwarding.secret
          readOnly: true
        readinessProbe:
          exec:
            command:
              - /usr/bin/health.sh
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 3
          timeoutSeconds: 3
        resources:
          requests:
            cpu: "200m"
            memory: "500Mi"
          limits:
            cpu: "2000m"
            memory: "1000Mi"
      volumes:
        - name: config
          configMap:
            name: proxy-config
            items:
            - key: velocity.toml
              path: velocity.toml
        - name: forwarding-secret
          secret:
            secretName: proxy-secrets
            items:
            - key: forwarding.secret
              path: forwarding.secret
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: longhorn
      resources:
        requests:
          storage: 1Gi
