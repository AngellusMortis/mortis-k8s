apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nessus
  namespace: nessus
  labels:
    app.kubernetes.io/name: nessus
spec:
  serviceName: nessus
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: nessus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nessus
    spec:
      containers:
      - name: nessus
        image: tenable/nessus:10.8.3-ubuntu # {"$imagepolicy": "flux-system:nessus-policy"}
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: nessus-secrets
        env:
          - name: AUTO_UPDATE
            value: "plugins"
        ports:
        - name: https
          containerPort: 8834
        livenessProbe:
          tcpSocket:
            port: https
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 5
          failureThreshold: 5
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /
            port: https
            scheme: HTTPS
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 5
          failureThreshold: 5
          successThreshold: 1
        resources:
          requests:
            cpu: "200m"
            memory: "400Mi"
          limits:
            cpu: "2000m"
            memory: "4000Mi"
        volumeMounts:
        - mountPath: /opt/nessus/var_volume/nessus
          name: data
          subPath: var
        - mountPath: /opt/nessus/etc/nessus
          name: data
          subPath: etc
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: longhorn
      resources:
        requests:
          storage: 10Gi
