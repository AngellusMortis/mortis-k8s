apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: emulatorjs
  namespace: media
spec:
  interval: 12h
  url: oci://tccr.io/truecharts/emulatorjs
  layerSelector:
    mediaType: "application/vnd.cncf.helm.chart.content.v1.tar+gzip"
    operation: extract
  ref:
    semver: "11.*"
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: media-apps-emulatorjs
  namespace: media
spec:
  releaseName: emulatorjs
  targetNamespace: media
  interval: 10m
  timeout: 5m
  chartRef:
    kind: OCIRepository
    name: emulatorjs
  postRenderers:
    - kustomize:
        patches:
          - target:
              kind: Deployment
              name: emulatorjs
            patch: |
              - op: replace
                path: /spec/template/spec/volumes
                value:
                  - name: config
                    persistentVolumeClaim:
                      claimName: emulatorjs-config
                  - emptyDir:
                      medium: Memory
                      sizeLimit: 8Gi
                    name: devshm
                  - name: roms
                    persistentVolumeClaim:
                      claimName: nas-media
                  - emptyDir: {}
                    name: shared
                  - emptyDir:
                      medium: Memory
                      sizeLimit: 8Gi
                    name: tmp
                  - emptyDir:
                      medium: Memory
                      sizeLimit: 8Gi
                    name: varlogs
                  - emptyDir:
                      medium: Memory
                      sizeLimit: 8Gi
                    name: varrun
              - op: replace
                path: /spec/template/spec/containers/0/volumeMounts
                value:
                  - mountPath: /config
                    name: config
                    subPath: config
                  - mountPath: /data
                    name: config
                    subPath: data
                  - mountPath: /dev/shm
                    name: devshm
                  - mountPath: /roms
                    name: roms
                    readOnly: true
                    subPath: games/roms
                  - mountPath: /shared
                    name: shared
                  - mountPath: /tmp
                    name: tmp
                  - mountPath: /var/logs
                    name: varlogs
                  - mountPath: /var/run
                    name: varrun

  values:
    workload:
      main:
        podSpec:
          containers:
            main:
              probes:
                liveness:
                  type: http
                  path: /backend/
                readiness:
                  type: http
                  path: /backend/
                startup:
                  type: http
                  path: /backend/
              env:
                # DISABLE_IPFS: "true"
                SUBFOLDER: /backend/
              fixedEnv:
                PUID: "1000"
                PGID: "1000"
    persistence:
      config:
        enabled: true
        mountPath: /config
        subPath: config
        size: 50Gi
      data:
        enabled: true
        mountPath: /data
        type: pvc
        subPath: data
        existingClaim: emulatorjs-config
      roms:
        enabled: true
        mountPath: /roms
        type: pvc
        subPath: games/roms
        existingClaim: nas-media
        readOnly: true

    ingress:
      front:
        enabled: true
        primary: true
        targetSelector:
          front: front
        annotations:
          nginx.ingress.kubernetes.io/upstream-vhost: "emu.wl.mort.is"
          nginx.ingress.kubernetes.io/auth-url: |-
              http://ak-outpost-authentik-embedded-outpost.auth.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
              https://auth.wl.mort.is/outpost.goauthentik.io/start?rd=$scheme%3A%2F%2F$host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
              Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
              proxy_set_header X-Forwarded-Host $http_host;
          nginx.ingress.kubernetes.io/proxy-body-size: 512m
        ingressClassName:  "nginx-secure"
        hosts:
          - host: emu.wl.mort.is
            paths:
                - path: /backend
                  pathType: Prefix
                  overrideService:
                    name: main
                    port: 10130
                - path: /
                  pathType: Prefix
                  overrideService:
                    name: front
                    port: 10124
        integrations:
          certManager:
            enabled: false
          traefik:
            enabled: false
          homepage:
            enabled: false
